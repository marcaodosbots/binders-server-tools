// src/subcommands/binder/Personalizacao/idioma.js
const { ActionRowBuilder, StringSelectMenuBuilder } = require('discord.js');
const createEmbed = require('../../../utils/createEmbed.js');
const getLanguage = require('../../../utils/getLanguage.js');

// central de textos para esse handler
const texts = {
    title: {
        'pt_BR': '<:mundo:1394088927794827350> Configura√ß√£o de Idioma',
        'en_US': '<:mundo:1394088927794827350> Language Configuration',
    },
    descriptions: {
        'pt_BR': [
            "Esta configura√ß√£o √© **pessoal** e afeta apenas como eu respondo a **voc√™**.\n\nSelecione uma das op√ß√µes abaixo para definir sua prefer√™ncia de idioma para todas as minhas respostas.",
            "Vamos ajustar como eu falo com voc√™! Sua escolha de idioma √© s√≥ sua e n√£o afeta outros usu√°rios.\n\nEscolha uma op√ß√£o no menu para salvar sua prefer√™ncia.",
            "Personalize sua experi√™ncia definindo seu idioma preferido. Esta √© uma configura√ß√£o individual que ser√° salva no seu perfil do bot.",
        ],
        'en_US': [
            'This setting is **personal** and only affects how I reply to **you**.\n\nPlease select an option below to set your language preference for all my replies.',
            'Let\'s adjust how I talk to you! Your language choice is yours alone and doesn\'t affect other users.\n\nChoose an option from the menu to save your preference.',
            'Personalize your experience by setting your preferred language. This is an individual setting that will be saved to your bot profile.',
        ]
    },
    menu: {
        placeholder: { 'pt_BR': 'Selecione uma op√ß√£o...', 'en_US': 'Select an option...' },
        auto_label: { 'pt_BR': 'Autom√°tico (padr√£o)', 'en_US': 'Automatic (default)' },
        auto_desc: { 'pt_BR': 'Minha l√≠ngua vai seguir a do seu Discord.', 'en_US': 'My language will follow your Discord\'s language.' },
        pt_label: { 'pt_BR': 'Sempre Portugu√™s', 'en_US': 'Always Portuguese' },
        pt_desc: { 'pt_BR': 'Eu sempre vou te responder em portugu√™s.', 'en_US': 'I will always answer you in Portuguese.' },
        en_label: { 'pt_BR': 'Sempre Ingl√™s', 'en_US': 'Always English' },
        en_desc: { 'pt_BR': 'Eu sempre vou te responder em ingl√™s.', 'en_US': 'I will always answer you in English.' },
    }
};

module.exports = {
    async execute(interaction, client) {
        // defer
        await interaction.deferReply();

        const lang = getLanguage(interaction);
        const randomDescription = texts.descriptions[lang][Math.floor(Math.random() * texts.descriptions[lang].length)];

        const langEmbed = await createEmbed(interaction, {
            title: texts.title[lang],
            description: randomDescription,
        });

        const langMenu = new ActionRowBuilder().addComponents(
            new StringSelectMenuBuilder()
                .setCustomId(`lang_select_${interaction.user.id}`)
                .setPlaceholder(texts.menu.placeholder[lang])
                .addOptions([
                    { label: texts.menu.auto_label[lang], description: texts.menu.auto_desc[lang], value: 'lang_auto', emoji: '‚öôÔ∏è' },
                    { label: texts.menu.pt_label[lang], description: texts.menu.pt_desc[lang], value: 'lang_pt_br', emoji: 'üáßüá∑' },
                    { label: texts.menu.en_label[lang], description: texts.menu.en_desc[lang], value: 'lang_en_us', emoji: 'üá¨üáß' },
                ])
        );
        
        await interaction.editReply({
            embeds: [langEmbed],
            components: [langMenu],
        });
    },
};